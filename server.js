// Generated by CoffeeScript 1.6.3
(function() {
  var Job, Repo, assert, config, config_path, express, http, job_map, load_config, routes, setup_server, urlencode;

  express = require('express');

  http = require('http');

  urlencode = require('urlencode');

  assert = require('assert');

  routes = require('./routes/index').routes;

  Job = require('./app/models').Job;

  Repo = require('./app/models').Repo;

  require('js-yaml');

  config = false;

  config_path = __dirname + '/content/config.yml';

  console.log("Reading config from: " + config_path);

  job_map = {};

  config = require(config_path);

  load_config = function(config) {
    var job_config, load_job, load_repo, repo_config, _i, _j, _len, _len1, _ref, _ref1, _results;
    load_job = function(job_config) {
      console.log(job_config);
      return Job.findOne({
        'name': job_config.name
      }, function(err, jobs) {
        var job;
        assert.ifError(err);
        console.log(jobs);
        if (!jobs) {
          console.log("Adding");
          job = new Job(job_config);
          console.log(job);
          return job.save(function(err) {
            return assert.ifError(err);
          });
        } else {
          return console.log("Not Adding");
        }
      });
    };
    load_repo = function(repo_config) {
      console.log(repo_config);
      return Repo.findOne({
        'name': repo_config.name
      }, function(err, repos) {
        var repo;
        assert.ifError(err);
        console.log(repos);
        if (!repos) {
          console.log("Adding");
          repo = new Repo(repo_config);
          console.log(repo);
          return repo.save(function(err) {
            return assert.ifError(err);
          });
        } else {
          return console.log("Not Adding");
        }
      });
    };
    _ref = config.jobs;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      job_config = _ref[_i];
      load_job(job_config);
    }
    _ref1 = config.repos;
    _results = [];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      repo_config = _ref1[_j];
      _results.push(load_repo(repo_config));
    }
    return _results;
  };

  load_config(config);

  setup_server = function() {
    var app;
    app = express();
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(app.router);
    app.use(express["static"](__dirname + '/public'));
    app.get('/api/config', function(req, res) {
      console.log("-- Config");
      return res.send({
        "config": config
      });
    });
    console.log(routes);
    app.get('/api/job/:job_name', routes.jobs.get);
    app.post('/api/job/:job_name/run', routes.jobs.run);
    app.get('/api/repos', routes.repos.get);
    app.listen(8080);
    return console.log("Listening on port 8080");
  };

  setup_server();

}).call(this);
